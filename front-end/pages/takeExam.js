import axios from "axios";
import moment from "moment";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import BodyExam from "../components/BodyExam";
import Footer from "../components/Footer";
import Header from "../components/Header";
import Loading from "../components/Loading";
import StateBox from "../components/StateBox";
import { initTime } from "../store/slices/timeSlice";

// Done form: question-answer-rightAnswer - 14-10-2021
// Done form: auto submit when timeout - 19-10-2021

export default function TakeExam() {
	const router = useRouter();
	const dispatch = useDispatch();

	const [exam, setExam] = useState({});
	const [loading, setLoading] = useState(false);

	//Fetch dữ liệu
	useEffect(() => {
		const fetchExam = async () => {
			try {
				const url = `${process.env.NEXT_PUBLIC_API_URL}/exams/${router.query.idExam}/take`;
				const token = localStorage.getItem("REFRESH_TOKEN");
				const res = await axios.get(url, {
					headers: {
						access_token: token,
					},
				});

				localStorage.setItem(
					`time_${router.query.idExam}`,
					res.data.minuteLimit,
				);
				if (!localStorage.getItem(`startTime_${router.query.idExam}`))
					localStorage.setItem(
						`startTime_${router.query.idExam}`,
						moment().format("DD/MM/YYYY HH:mm:ss"),
					);
				console.log(res.data);
				setExam(res.data);
				setLoading(true);
			} catch (error) {
				console.log("Failed to fetch exam:", error);
			}
		};
		fetchExam();
	}, [router.query.idExam]);

	return (
		<div>
			<Head>
				<title>Do the Exam</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Header disable={true} />
			{loading ? (
				<div className="flex justify-between my-10 flex-col md:flex-row">
					<BodyExam exam={exam} />
					<StateBox id={exam._id} />
				</div>
			) : (
				<Loading />
			)}
			<Footer disable={true} />
		</div>
	);
}
